{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/iOS","result":{"pageContext":{"currentCategory":"iOS","categories":["All","iOS","TIL","Unity","Algorithm"],"edges":[{"node":{"id":"f324d5e6-32b3-575f-8752-9fb5f8c101df","excerpt":"기존 파이썬이나 자바스크립트 문법을 알고 있기 때문에, 비슷한 방식의 문법구조와 관련된 건 스킵하기로 했다. 다만 Swift에서 꼭 알아야만 하는 문법과 이 언어의 특징과 같은 문법들은 꼼꼼하게 되짚어보자.(사실 이게 더 어려움;;) 1. inout 입출력 파라미터 함수를 통해, 변수를 직접 수정하고 싶은 경우, 함수내의 파라미터는 기본적으로 복사되어 전달되는 값타입(str, string, Int…)이며, 임시상수이기 때문에 변경 불가가 원칙임. 뭐 파이썬처럼 생각해보면 맞지 않을까? 라는 의문이 들 수 있는게 당연하다 (일단 나부터 개추;;) 실제로는 이 코드는 에러블록을 띄우는데, a와 b는 파라미터이기 때문에, 전역변수 scope에 있던 변수들이 복사되어 전달된다 (직접 쓰인다 정도로 이해하면 될 듯) 따라서, 원본이 전달되기 때문에 전역변수의 값이 변경되어서는 안되는 변경 불가가 원칙이다. 이 예시를 보면 파라미터 앞에 inout 키워드를 쓰게되면, 이는 직접 전달 방식보단…","fields":{"slug":"/gatsby-github-blog/"},"frontmatter":{"categories":"iOS TIL","title":"inout 입출력 파라미터, gaurd문, 옵셔널 바인딩","date":"July 10, 2024"}},"next":{"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}},"previous":null}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}